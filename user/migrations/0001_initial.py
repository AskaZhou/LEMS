# Generated by Django 2.0.2 on 2020-05-30 01:01

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('teacher', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Applylist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='BreakEquipment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('BreakEquipmentNum', models.CharField(max_length=15, unique=True, verbose_name='故障序号')),
                ('BreakEquipmentName', models.CharField(max_length=11, verbose_name='故障名称')),
                ('eNum', models.CharField(max_length=15, verbose_name='设备号')),
                ('BreakData', models.DateField(auto_now=True)),
                ('BreakTxt', models.CharField(max_length=11, verbose_name='故障信息')),
                ('DealPerson', models.CharField(max_length=11, verbose_name='经手人')),
            ],
        ),
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('eNum', models.CharField(max_length=15, unique=True, verbose_name='设备编号')),
                ('eKind', models.CharField(choices=[('计算机类', '计算机类'), ('机械类', '机械类'), ('物理类', '物理类'), ('化学类', '化学类'), ('生物类', '生物类'), ('其它类', '其它类')], default='请选择设备类型', max_length=10, verbose_name='设备类型')),
                ('eName', models.CharField(max_length=10, verbose_name='设备名称')),
                ('eCost', models.CharField(max_length=11, verbose_name='价格')),
                ('eManufacture', models.CharField(max_length=10, null=True, verbose_name='制造商')),
                ('eManufactureData', models.DateField(default=datetime.date(2020, 5, 30), null=True, verbose_name='生产日期')),
                ('eRoom', models.CharField(max_length=10, verbose_name='设备所在教室')),
                ('eState', models.CharField(choices=[('可借', '可借'), ('借出', '借出'), ('故障', '故障')], default='可借', max_length=3, verbose_name='状态')),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ServiceNum', models.CharField(max_length=15, unique=True, verbose_name='维修号')),
                ('BreakEquipmentNum', models.CharField(max_length=15, unique=True, verbose_name='故障序号')),
                ('eNum', models.CharField(max_length=15, unique=True, verbose_name='设备号')),
                ('ServiceData', models.DateField(auto_now=True)),
                ('ServiceTxt', models.CharField(max_length=11, verbose_name='故障信息')),
                ('Change', models.CharField(max_length=11, verbose_name='改变配置')),
                ('ServiceCost', models.CharField(max_length=11, verbose_name='维修金额')),
                ('ServiceName', models.CharField(max_length=11, verbose_name='维修人')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userName', models.CharField(max_length=11, verbose_name='姓名')),
                ('userNum', models.CharField(max_length=15, verbose_name='学号')),
                ('userPhone', models.CharField(max_length=11, verbose_name='联系方式')),
                ('userPwd', models.CharField(max_length=78, verbose_name='密码')),
                ('useCount', models.IntegerField(default=0, verbose_name='已借数')),
            ],
        ),
        migrations.AddField(
            model_name='equipment',
            name='eStudent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='user.User', verbose_name='借用学生'),
        ),
        migrations.AddField(
            model_name='equipment',
            name='eTeacher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='teacher.Teacher', verbose_name='负责教师'),
        ),
        migrations.AddField(
            model_name='applylist',
            name='equipment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.Equipment', verbose_name='归还设备'),
        ),
        migrations.AddField(
            model_name='applylist',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.User', verbose_name='归还学生'),
        ),
    ]
